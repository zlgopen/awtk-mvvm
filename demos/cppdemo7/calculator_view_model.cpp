
/*This file is generated by code generator*/

#include "tkc/mem.h"
#include "tkc/utils.h"
#include "mvvm/base/utils.h"
#include "calculator_view_model.h"

static ret_t calculator_view_model_set_prop(tk_object_t* obj, const char* name, const value_t* v) {
  Calculator* aCalculator = ((calculator_view_model_t*)(obj))->aCalculator;

  if (tk_str_ieq("expr", name)) {
    aCalculator->expr = value_str(v);

    return RET_OK;
  }

  return RET_NOT_FOUND;
}

static ret_t calculator_view_model_get_prop(tk_object_t* obj, const char* name, value_t* v) {
  Calculator* aCalculator = ((calculator_view_model_t*)(obj))->aCalculator;

  if (tk_str_ieq("expr", name)) {
    value_set_str(v, aCalculator->expr.c_str());
    return RET_OK;
  }

  return RET_NOT_FOUND;
}

static bool_t calculator_view_model_can_exec(tk_object_t* obj, const char* name, const char* args) {
  calculator_view_model_t* vm = (calculator_view_model_t*)(obj);
  Calculator* aCalculator = vm->aCalculator;
  if (tk_str_ieq("addChar", name)) {
    return TRUE;

  } else if (tk_str_ieq("removeChar", name)) {
    return aCalculator->CanRemoveChar();

  } else if (tk_str_ieq("eval", name)) {
    return aCalculator->CanEval();
  }
  return FALSE;
}

static ret_t calculator_view_model_exec(tk_object_t* obj, const char* name, const char* args) {
  calculator_view_model_t* vm = (calculator_view_model_t*)(obj);
  Calculator* aCalculator = vm->aCalculator;
  if (tk_str_ieq("addChar", name)) {
    return aCalculator->AddChar(args[0]);

  } else if (tk_str_ieq("removeChar", name)) {
    return aCalculator->RemoveChar();

  } else if (tk_str_ieq("eval", name)) {
    return aCalculator->Eval();
  }
  return RET_NOT_FOUND;
}

static ret_t calculator_view_model_on_destroy(tk_object_t* obj) {
  calculator_view_model_t* vm = (calculator_view_model_t*)(obj);
  return_value_if_fail(vm != NULL, RET_BAD_PARAMS);

  delete (vm->aCalculator);

  return view_model_deinit(VIEW_MODEL(obj));
}

static const object_vtable_t s_calculator_view_model_vtable = {"calculator_view_model_t",
                                                               "calculator_view_model_t",
                                                               sizeof(calculator_view_model_t),
                                                               FALSE,
                                                               calculator_view_model_on_destroy,
                                                               NULL,
                                                               calculator_view_model_get_prop,
                                                               calculator_view_model_set_prop,
                                                               NULL,
                                                               NULL,
                                                               calculator_view_model_can_exec,
                                                               calculator_view_model_exec};

view_model_t* calculator_view_model_create_with(Calculator* aCalculator) {
  tk_object_t* obj = tk_object_create(&s_calculator_view_model_vtable);
  view_model_t* vm = view_model_init(VIEW_MODEL(obj));
  calculator_view_model_t* calculator_view_model = (calculator_view_model_t*)(vm);

  return_value_if_fail(vm != NULL, NULL);

  calculator_view_model->aCalculator = aCalculator;

  return vm;
}

ret_t calculator_view_model_attach(view_model_t* vm, Calculator* aCalculator) {
  calculator_view_model_t* calculator_view_model = (calculator_view_model_t*)(vm);
  return_value_if_fail(vm != NULL, RET_BAD_PARAMS);

  calculator_view_model->aCalculator = aCalculator;

  return RET_OK;
}

view_model_t* calculator_view_model_create(navigator_request_t* req) {
  Calculator* aCalculator = new Calculator();
  return_value_if_fail(aCalculator != NULL, NULL);

  return calculator_view_model_create_with(aCalculator);
}
